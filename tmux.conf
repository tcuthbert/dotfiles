# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# Session
#set -g @continuum-restore 'on'
# new window has CWD
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions
# Unbind ex key
set -g default-terminal "screen-256color"
unbind C-b
set -g prefix C-q

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
## smart pane switching with awareness of vim splits                             
bind -n M-C-h run "(tmux display-message -p '#{pane_current_command} #{window_name}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n M-C-j run "(tmux display-message -p '#{pane_current_command} #{window_name}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n M-C-k run "(tmux display-message -p '#{pane_current_command} #{window_name}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n M-C-l run "(tmux display-message -p '#{pane_current_command} #{window_name}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n M-C-\ run "(tmux display-message -p '#{pane_current_command} #{window_name}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
